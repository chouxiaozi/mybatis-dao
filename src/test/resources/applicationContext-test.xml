<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
           http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/mvc     http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
           http://www.springframework.org/schema/tx      http://www.springframework.org/schema/tx/spring-tx.xsd
       ">



	<bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
		<!--结果集日志开关-->
		<property name="resultSetLogEnabled" value="false" />
		<!--statementLog 开关 监测sql 输出 、执行时间-->
		<property name="statementLogEnabled" value="false" />
	</bean>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<!-- 基本属性 url、user、password -->
		<property name="url"
			value="jdbc:mysql://127.0.0.1:3306/mapper_test?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull">
		</property>
		<property name="username" value="root"></property>
		<property name="password" value="zymysql"></property>

		<!-- 配置监控统计拦截的filters 监控 、防止sql注入 -->
		<property name="filters" value="stat,wall" />
		<!-- 配置监控统计拦截的日志 -->
		<property name="proxyFilters">
			<list>
				<ref bean="log-filter" />
			</list>
		</property>

		<!-- 配置初始化大小、最小、最大 -->
		<property name="maxActive" value="20" />
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小  分库分表较多的数据库，建议配置为false。-->
		<property name="poolPreparedStatements" value="false" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="50" />
		<property name="defaultAutoCommit" value="true" />
	</bean>


	<!-- 事务配置 transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 扫描搜索spring可以自动去扫描base-pack下面或者子包下面的java文件，如果扫描到有@Component @Controller@Service等这些注解的类，则把这些类注册为bean -->
	<!--  enable component scanning (beware that this does not enable mapper scanning!) -->
	<context:component-scan base-package="com.rework.joss.persistence.*" />



	<!-- enable transaction demarcation with annotations -->
	<!-- 引用该事务管理对象 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 查找配置文件 -->
	<!-- define the SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="typeAliasesPackage" value="com.rework.joss.persistence.entity" />
		<property name="mapperLocations" value="classpath:com/rework/joss/persistence/*/*.xml" />
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.rework.joss.persistence.mapper" />
	</bean>



	<import resource="classpath:com/rework/joss/persistence/convention/baseDao.xml" />


</beans>